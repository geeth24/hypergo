services:
  hypergo-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: hypergo-server
    ports:
      - "80:8079"
    volumes:
      - ./server/shortcuts.json:/app/shortcuts.json
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "https://go.geethg.com/admin"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - PORT=8079
      - DATABASE_URL=postgres://postgres:postgres@db:5432/hypergo
      - REDIS_URL=redis:6379
      - IMPORT_FROM_JSON=false
      - SHORTCUTS_FILE=/app/shortcuts.json
    depends_on:
      - db
      - redis
    networks:
      - hypergo_network

  hypergo-frontend:
    build: 
      context: ./client            # Points to the client directory
      dockerfile: Dockerfile       # Dockerfile is in the client directory
    container_name: hypergo-frontend
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
    networks:
      - hypergo_network
    depends_on:
      - hypergo-server

  db:
    image: postgres:16-alpine
    container_name: hypergo-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hypergo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/migration.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - hypergo_network

  redis:
    image: redis:7-alpine
    container_name: hypergo-redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "6382:6379"
    networks:
      - hypergo_network

networks:
  hypergo_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: